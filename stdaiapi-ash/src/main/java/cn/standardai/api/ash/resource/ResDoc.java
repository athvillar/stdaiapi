package cn.standardai.api.ash.resource;

import cn.standardai.api.ash.base.AshResource;

public class ResDoc extends AshResource {

	public static final String[][] doc = new String[][] {
		new String[] {
				"LSTM", "循环神经网络（RNN）的一个变体，长短期记忆模型（Long Short Term Memory），"
						+ "可以有效解决传统RNN梯度随时间消失问题。\n"
						+ "与传统RNN类似，LSTM可以接收流输入，并延时输出，根据输入数据的不同，可以训练图像识别、"
						+ "翻译等模型。\n"
						+ "也可以将多个LSTM结合起来组成多层LSTM模型，用于解决更为复杂的问题。\n\n"
						+ "LSTM模型结构\n"
						+ "\t{\n"
						+ "\t  \"layerSize\":[3,4],\n"
						+ "\t  \"inputSize\":100,\n"
						+ "\t  \"outputSize\":100,\n"
						+ "\t  \"delay\": true\n"
						+ "\t}\n"
						+ "\n参数说明\n"
						+ "\tlayerSize\t\t\t各层深度\n"
						+ "\tinputSize\t\t\t输入向量维度\n"
						+ "\toutputSize\t\t输出向量维度\n"
						+ "\tdelay\t\t\t是否延迟输出"
		},
		new String[] {
				"CNN", "卷积神经网络（Convolution Neural Network）通过卷积核的卷积操作，在不严重影响识别效果的前提下，"
						+ "大大减少网络中的变量个数，从而提高了训练效率。\n"
						+ "在应用中，CNN被广泛地用于图像识别工作，其可以处理的维度不限于2维，通常的CNN可以处理3维数据，"
						+ "对于图像识别来说，除了长和宽，还可以处理深度数据，即RGB三个通道。\n\n"
						+ "CNN模型结构\n"
						+ "\t{\n"
						+ "\t  \"layers\" : [\n"
						+ "\t    {\"type\": \"INPUT\", \"width\": 100, \"height\": 100, \"depth\": 1 },\n"
						+ "\t    {\"type\": \"POOL\", \"method\": \"max\", \"spatial\": 2, \"stride\": 2},\n"
						+ "\t    {\"type\": \"CONV\", \"depth\": 8, \"stride\": 1, \"padding\":1, \"learningRate\": 1, \"aF\": \"sigmoid\",\n"
						+ "\t      \"filter\": {\"width\":3, \"height\":3}\n"
						+ "\t    },\n"
						+ "\t    {\"type\": \"POOL\", \"method\": \"max\", \"spatial\": 2, \"stride\": 2},\n"
	     				+ "\t    {\"type\": \"FC\", \"depth\": 15, \"learningRate\": 1, \"aF\": \"sigmoid\" }\n"
						+ "\t  ]\n"
						+ "\t}\n"
						+ "\n参数说明\n"
						+ "\tINPUT\t\t\t输入层\n"
						+ "\tPOOL\t\t\tPOOLING层\n"
						+ "\tCONV\t\t\t卷积层\n"
						+ "\tFC\t\t\t\t输出层"
		},
		new String[] {
				"tutorial", "为了让每个人都可以快速地生成自己的深度学习模型，深度学习平台Athvillar为用户提供通用的深度学习模型全生命周期管理服务。"
						+ "平台由网页版、ash和SDK组成。三者中的任何一个都包含全部功能，现在您看到的ash，即命令行界面。\n"
						+ "\nash是Athvillar shell的缩写，是模仿linux命令行的平台操作系统，ash命令有两大类，一类是通用命令，"
						+ "通常命令格式为\"命令名 [参数]\"，具体命令格式可以通过\"man 命令名\"查看。另一类是资源命令，资源命令的主要"
						+ "目的是操作某一类资源，所以命令格式通常为\"命令名 [资源类别] [参数]\"，可以通过\"man 命令名\"查看使用说明。"
						+ "平台的资源包括数据(data)、模型(model)、文档(doc)、数据字典(dic)、过滤器(filter)等。查看某一资源的详细说明，"
						+ "请输入\"help 资源类别\"，进入某一资源目录，请输入\"cd 资源类别\"，之后可使用ls命令查看资源列表，或cat命令查看某一"
						+ "资源详细信息，新建资源，请使用mk命令。\n"
						+ "\n命令输入框前的提示符显示了当前在哪类资源下，例如\"$model>\"代表当前在模型目录下，输入资源命令时，可以省略资源类别"
						+ "，默认操作当前资源，例如如果在model目录下，输入\"ls\"(省略资源类别model)，即可查看model下的资源列表。\n"
						+ "\n使用平台训练自己的神经网络，一般流程是登陆(login)或注册(mk user)，上传数据(mk data)，建立模型(mk model)，"
						+ "训练模型(call model -t)，使用模型(call model -p)，之后可以按照提示进行操作。\n"
						+ "\n作为v0.1版本，平台仍然有许多问题，欢迎使用msg命令与管理员交流。\n"
						+ "\n更多文档，请输入\"ls doc\"或\"cat doc 文档名\"查看\n"
		},
		new String[] {
				"data", "data是一类资源，训练深度神经网络模型必须使用数据，不同的模型需要不同的数据，数据由用户上传，也可以使用其他用户"
						+ "共享的数据训练模型。\n"
						+ "无论是何种模型，数据的保存方式是统一的，每一条记录均被保存在ref，x，y三个字段中。"
						+ "创建数据使用\"mk data\"命令，根据根据命令行提示建立数据，设置数据名称，数据共享策略(关于数据共享策略请参考share词条)，"
						+ "设置数据格式(不同的数据格式会影响数据解析时使用的过滤器，关于过滤器请请参考filter词条)，关键词，创建数据时，"
						+ "可以选择本地文件上传，支持*通配符，输入本地文件路径后，因为js安全设置，数据不会立刻上传，平台会生成一个上传数据的curl请求命令行，"
						+ "在shell环境执行该命令即可上传数据。上传后的文件名会被保存在数据的ref字段中。"
						+ "如果数据不是本地文件，而是字符串形式上传，可以以\n"
						+ "[\n"
						+ "\t[\"数据1数据\",\"数据1标签\"],\n"
						+ "\t[\"数据2数据\",\"数据2标签\"],\n"
						+ "\t...\n"
						+ "]\n"
						+ "的格式上传，其中\"数据\"部分会被保存在数据的x字段中，\"标签\"部分会被保存在y字段中。"
						+ "上传数据后，可以对数据的标签进行更改，使用\"set data\"命令，可以更新或者最佳数据，更新的时候，首选选择更新的数据编号，编号从0开始，"
						+ "更新格式为\n"
						+ "[\n"
						+ "\t[\"数据1数据\",\"数据1标签\"],\n"
						+ "\t[\"数据2数据\",\"数据2标签\"],\n"
						+ "\t...\n"
						+ "]\n"
						+ "如果不希望逐条更新，也支持批量更新，批量更新脚本为\n"
						+ "{\n"
						+ "\t\"标签1\":{\"start\":标签1开始编号,\"end\":标签1结束编号},\n"
						+ "\t\"标签2\":{\"start\":标签2开始编号,\"end\":标签2结束编号},\n"
						+ "\t... \n"
						+ "}\n"
						+ "删除数据使用\"rm data\"命令，查看可用数据使用\"ls data\"命令，查看某数据详细信息使用\"cat data\"命令，命令的"
						+ "详细使用方式可参考命令的帮助，使用\"man [命令名]\"。"
		},
		new String[] {
				"filter", "filter是过滤器，是平台的一类资源，用于训练前的数据预处理，因为不同的数据格式不同，不同的算法需要的数据格式也不同，所以"
						+ "有必要在训练前对数据进行某种变换，这即是filter的作用。\n"
						+ "系统内置了一些filter，在创建模型时如果不指定filter，会使用系统默认filter，对于一些自定义程度比较高的训练任务，用户可以"
						+ "在创建模型时选择符合的filter进行，关于filter的种类，可以通过\"ls filter\"或\"cat filter\"进行查看。"
		},
		new String[] {
				"contact", "欢迎使用msg命令与管理员交流，或者通过\n"
						+ "\t微信\t\tipulsplus\n"
						+ "\t邮箱\t\tathvillar@hotmail.com\n"
						+ "\t电话\t\t18910532582\n"
						+ "与管理员联系。"
		}
	};

	@Override
	public String help() {
		return "doc，文档资源，Athvillar平台相关文档。\n"
				+ "包括系统介绍性文档，专题文档，ash使用文档，sdk文档等资源。"
				+ "与文档资源相关的命令包括cat, ls。";
	}
}
